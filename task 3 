from google.colab import drive
drive.mount('/content/drive')


import pandas as pd

file_path = '/content/drive/MyDrive/spam.csv'  
df = pd.read_csv(file_path, encoding='latin-1')
print(df.columns)
df = df[['v1', 'v2']]  
df.columns = ['label', 'text']


df['label'] = df['label'].map({'ham': 0, 'spam': 1})

# Step 4: Preprocess the text
import re
def clean_text(text):
    text = text.lower()
    text = re.sub(r'[^\w\s]', '', text)  
    text = re.sub(r'\d+', '', text)
    return text

df['text'] = df['text'].apply(clean_text)

# Step 5: Split data
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.2, random_state=42)

# Step 6: TF-IDF Vectorization
from sklearn.feature_extraction.text import TfidfVectorizer
vectorizer = TfidfVectorizer(stop_words='english', max_features=3000)
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Step 7: Train classifier (Logistic Regression here)
from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(X_train_vec, y_train)

# Step 8: Evaluate model
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

y_pred = model.predict(X_test_vec)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))